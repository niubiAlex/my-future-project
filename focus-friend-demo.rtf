{\rtf1\ansi\ansicpg936\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="en">\
<head>\
  <meta charset="UTF-8" />\
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />\
  <title>Focus Friend \'97 Ticket-Chained Focus Demo</title>\
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet">\
  <script src="https://cdn.tailwindcss.com"></script>\
  <style>\
    .ticker\{font-variant-numeric:tabular-nums\}\
    .code\{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace\}\
    .safe-bottom\{padding-bottom:max(env(safe-area-inset-bottom),16px)\}\
    .ring\{--pct:0;background:conic-gradient(rgb(34 197 94) calc(var(--pct)*1%), rgb(226 232 240) 0)\}\
    .badge\{display:inline-flex;align-items:center;gap:.25rem;border:1px solid rgba(0,0,0,.08);border-radius:9999px;padding:.125rem .5rem;font-size:11px\}\
  </style>\
</head>\
<body class="min-h-screen bg-gradient-to-b from-white to-slate-100 text-gray-900">\
  <!-- Header -->\
  <header class="sticky top-0 z-30 bg-white/80 backdrop-blur border-b border-slate-200">\
    <div class="max-w-md mx-auto px-4 py-3 flex items-center justify-between">\
      <div class="flex items-center gap-2">\
        <div class="w-9 h-9 rounded-2xl bg-blue-100 grid place-items-center text-blue-600">\uc0\u55356 \u57247 \u65039 </div>\
        <div>\
          <h1 class="text-lg font-extrabold leading-none">Focus Friend</h1>\
          <p class="text-[11px] text-slate-500">15-minute focus relay</p>\
        </div>\
      </div>\
      <div class="flex items-center gap-2">\
        <input id="userName" class="w-36 rounded-xl border border-slate-200 bg-white px-3 py-1.5 text-xs focus:outline-none focus:ring-4 focus:ring-blue-100 shadow-sm" placeholder="Your name" />\
        <button id="saveUserBtn" class="px-3 py-1.5 rounded-xl bg-blue-600 text-white text-xs font-semibold">Save</button>\
      </div>\
    </div>\
  </header>\
  <!-- Main -->\
  <main class="max-w-md mx-auto px-4 pt-4 pb-28">\
    <!-- Focus view -->\
    <section id="view-focus" class="space-y-4">\
      <div class="p-4 rounded-2xl bg-white border border-slate-200 shadow-sm">\
        <div class="flex items-center justify-between">\
          <h2 class="text-base font-semibold">Start Focus</h2>\
          <label class="flex items-center gap-2 text-xs text-slate-600">\
            <input id="demoMode" type="checkbox" class="h-4 w-4 rounded border-slate-300" /> Demo mode (15s)\
          </label>\
        </div>\
        <p class="text-xs text-slate-500 mt-1">Paste a ticket to start your 15 minutes, or claim one from the pool.</p>\
        <!-- BIG Timer primary visual (always visible) -->\
        <div id="timerCard" class="mt-5 p-6 rounded-2xl bg-slate-50 border border-slate-200">\
          <div class="flex flex-col items-center justify-center gap-4">\
            <div class="relative h-64 w-64">\
              <div id="ring" class="ring h-64 w-64 rounded-full grid place-items-center"></div>\
              <div class="absolute inset-2 rounded-full bg-white grid place-items-center text-center border border-slate-200">\
                <div>\
                  <div id="timeText" class="ticker text-6xl font-extrabold">15:00</div>\
                  <div id="timerHint" class="text-xs text-slate-500 mt-1">Not started</div>\
                </div>\
              </div>\
            </div>\
            <div class="w-full text-center">\
              <div id="usingInfo" class="text-sm text-slate-600">Ticket: \'97</div>\
              <button id="abortBtn" class="mt-4 px-4 py-2 rounded-lg bg-white text-slate-700 text-sm border border-slate-300 hover:bg-slate-100 hidden">Abort</button>\
            </div>\
          </div>\
        </div>\
        <!-- Input & actions -->\
        <div class="mt-5 flex gap-2">\
          <input id="ticketInput" class="flex-1 rounded-xl border border-slate-200 bg-slate-50 px-3 py-3 text-sm focus:outline-none focus:ring-4 focus:ring-blue-100 code" placeholder="Ticket code, e.g. FF-1A2B-3C4D" />\
          <button id="verifyBtn" class="px-4 py-3 rounded-xl bg-blue-600 text-white text-sm font-semibold">Verify & Start</button>\
        </div>\
        <div class="mt-2">\
          <button id="goPoolBtn" class="text-xs text-blue-600 underline">No ticket? Go to Ticket Pool \uc0\u8594 </button>\
        </div>\
        <!-- New ticket after finish -->\
        <div id="newTicketCard" class="hidden mt-6 p-4 rounded-2xl bg-emerald-50 border border-emerald-200">\
          <div class="flex items-start justify-between gap-3">\
            <div>\
              <div class="text-sm text-emerald-700 font-medium">Done! New ticket created</div>\
              <div id="newTicketCode" class="mt-2 code text-lg"></div>\
            </div>\
            <div class="flex gap-2">\
              <button id="copyNewTicket" class="px-3 py-2 rounded-lg bg-emerald-600 text-white text-xs">Copy</button>\
              <button id="shareNewTicket" class="px-3 py-2 rounded-lg bg-emerald-100 text-emerald-700 text-xs border border-emerald-300">Invite\'85</button>\
            </div>\
          </div>\
        </div>\
      </div>\
    </section>\
    <!-- Produced view -->\
    <section id="view-produced" class="hidden space-y-4">\
      <div class="p-4 rounded-2xl bg-white border border-slate-200 shadow-sm">\
        <div class="flex items-center justify-between mb-1">\
          <h2 class="text-base font-semibold">My Tickets</h2>\
          <span id="producedCount" class="badge">0</span>\
        </div>\
        <ul id="producedList" class="space-y-2 text-sm"></ul>\
      </div>\
    </section>\
    <!-- Used view -->\
    <section id="view-used" class="hidden space-y-4">\
      <div class="p-4 rounded-2xl bg-white border border-slate-200 shadow-sm">\
        <div class="flex items-center justify-between mb-1">\
          <h2 class="text-base font-semibold">Used Tickets</h2>\
          <span id="usedCount" class="badge">0</span>\
        </div>\
        <ul id="usedList" class="space-y-2 text-sm"></ul>\
      </div>\
    </section>\
    <!-- Pool view -->\
    <section id="view-pool" class="hidden space-y-4">\
      <div class="p-4 rounded-2xl bg-white border border-slate-200 shadow-sm">\
        <div class="flex items-center justify-between mb-1">\
          <h2 class="text-base font-semibold">Ticket Pool</h2>\
          <button id="refreshPoolBtn" class="px-3 py-1.5 rounded-lg bg-white text-slate-800 text-xs border border-slate-300">Refresh</button>\
        </div>\
        <p class="text-xs text-slate-600 mb-2">Claim donated tickets here. Unused tickets auto-expire after 24 hours.</p>\
        <ul id="poolList" class="space-y-2 text-sm"></ul>\
      </div>\
    </section>\
  </main>\
  <!-- Bottom Nav -->\
  <nav class="fixed bottom-0 inset-x-0 z-40 bg-white/90 backdrop-blur border-t border-slate-200 safe-bottom">\
    <div class="max-w-md mx-auto grid grid-cols-4">\
      <button data-tab="focus" class="tab-btn flex flex-col items-center gap-1 py-2 text-blue-600 font-semibold">\
        <span class="text-xl">\uc0\u9201 \u65039 </span>\
        <span class="text-[11px]">Focus</span>\
      </button>\
      <button data-tab="produced" class="tab-btn flex flex-col items-center gap-1 py-2 text-slate-600">\
        <span class="text-xl">\uc0\u55356 \u57217 </span>\
        <span class="text-[11px]">My Tickets</span>\
      </button>\
      <button data-tab="used" class="tab-btn flex flex-col items-center gap-1 py-2 text-slate-600">\
        <span class="text-xl">\uc0\u55357 \u56549 </span>\
        <span class="text-[11px]">Used</span>\
      </button>\
      <button data-tab="pool" class="tab-btn flex flex-col items-center gap-1 py-2 text-slate-600">\
        <span class="text-xl">\uc0\u55356 \u57318 </span>\
        <span class="text-[11px]">Pool</span>\
      </button>\
    </div>\
  </nav>\
   <script>\
    const STORE_KEY='ff_store_en_v1';\
    const now=()=>Date.now();\
    const $=s=>document.querySelector(s);\
    const fmt=ms=>new Date(ms).toLocaleString();\
    const H24=24*60*60*1000;\
\
    // \uc0\u38543 \u26426 \u31080 \u21495 \u29983 \u25104 \
    const randChunk=()=>\{const c='ABCDEFGHJKLMNPQRSTUVWXYZ23456789';let s='';for(let i=0;i<4;i++)s+=c[Math.floor(Math.random()*c.length)];return s;\};\
    const newId=()=>`FF-$\{randChunk()\}-$\{randChunk()\}`;\
\
    // \uc0\u24635 \u26159 \u34917 \u28385 7\u24352 \u28436 \u31034 \u27744 \u31080 \u65292 \u27599 \u21047 \u19968 \u27425 ID\u36319 \u36394 \u19981 \u37325 \u22797 \
    function makeDemoTickets(existingIds)\{\
      const arr=[];\
      const nowT=now();\
      for(let i=1;i<=7;i++)\{\
        let id;\
        // \uc0\u36991 \u20813 \u19982 \u24403 \u21069 \u24050 \u26377 \u37325 \u22797 \
        do \{ id = newId(); \} while(existingIds.has(id));\
        arr.push(\{\
          id: id,\
          producedBy: "TestUser"+i,\
          producedAt: nowT - Math.floor(Math.random()*3600000), // \uc0\u38543 \u26426 \u36807 \u21435 1\u23567 \u26102 \u20869 \
          expireAt: nowT+H24,\
          donatedAt: nowT - Math.floor(Math.random()*1800000),\
          status: "pool",\
          claimedBy: null,\
        \});\
        existingIds.add(id);\
      \}\
      return arr;\
    \}\
\
    // \uc0\u40664 \u35748 store\
    const defaultStore=()=>(\{user:'',tickets:[],focus:null,pool: []\});\
\
    // \uc0\u26412 \u22320 \u23384 \u20648 \
    const load=()=>\{try\{return JSON.parse(localStorage.getItem(STORE_KEY))||defaultStore();\}catch\{return defaultStore();\}\};\
    const save=s=>localStorage.setItem(STORE_KEY,JSON.stringify(s));\
\
    // \uc0\u26032 \u24314 ticket\u65288 \u33258 \u24049 \u29983 \u20135 \u19987 \u29992 \u65292 \u19981 \u36827 pool\u65289 \
    const createTicket=(by)=>(\{id:newId(),producedBy:by,producedAt:now(),usedBy:null,usedAt:null,status:'unused',expireAt:now()+H24\});\
\
    function cleanup(s)\{\
      const tNow=now();\
      s.tickets.forEach(t=>\{\
        if((t.status==='unused'||t.status==='claimed'||t.status==='pool')&&t.expireAt<=tNow)t.status='expired';\
      \});\
      s.pool.forEach(p=>\{\
        if((p.status==='pool'||p.status==='claimed')&&p.expireAt<=tNow)p.status='expired';\
      \});\
    \}\
\
    // Tabs\
    function switchTab(key)\{\
      ['focus','produced','used','pool'].forEach(k=>$('#view-'+k).classList.toggle('hidden',k!==key));\
      document.querySelectorAll('.tab-btn').forEach(b=>\{\
        const on=b.dataset.tab===key;\
        b.classList.toggle('text-blue-600',on);\
        b.classList.toggle('font-semibold',on);\
        b.classList.toggle('text-slate-600',!on)\
      \});\
    \}\
\
    // Timer\
    let INTERVAL=null;let DURATION=15*60*1000;\
    function setDemoMode(on)\{\
      DURATION=on?15000:15*60*1000;updateTimerText(DURATION);setRing(0);\
    \}\
    function updateTimerText(ms)\{\
      const s=Math.max(0,Math.ceil(ms/1000));\
      const m=String(Math.floor(s/60)).padStart(2,'0');\
      const ss=String(s%60).padStart(2,'0');\
      $('#timeText').textContent=`$\{m\}:$\{ss\}`;\
    \}\
    function setRing(p)\{\
      const clamped=Math.max(0,Math.min(100,p));\
      $('#ring').style.setProperty('--pct',clamped);\
    \}\
    function startTicker(endAt,onEnd)\{\
      clearInterval(INTERVAL);\
      INTERVAL=setInterval(()=>\{\
        const rem=endAt-now();\
        updateTimerText(rem);\
        setRing((1-rem/DURATION)*100);\
        if(rem<=0)\{clearInterval(INTERVAL);onEnd?.();\}\
      \},250);\
    \}\
\
    function startFocus(t)\{\
      const s=load();\
      t.status='used';\
      t.usedBy=s.user;\
      t.usedAt=now();\
      s.focus=\{endAt:now()+DURATION,usedTicketId:t.id\};\
      save(s);\
      $('#timerHint').textContent='Counting down';\
      $('#usingInfo').textContent=`Ticket: $\{t.id\} \'b7 by $\{t.producedBy\}`;\
      $('#abortBtn').classList.remove('hidden');\
      startTicker(s.focus.endAt,onEnd);\
      render();\
      switchTab('focus');\
    \}\
    function onEnd()\{\
      const s=load();\
      const user=s.user;\
      if(!user)return;\
      const nt=createTicket(user);\
      s.tickets.push(nt);\
      s.focus=null;\
      save(s);\
      $('#newTicketCode').textContent=nt.id;\
      $('#newTicketCard').classList.remove('hidden');\
      $('#abortBtn').classList.add('hidden');\
      render();\
      toast('Focus complete! New ticket created \uc0\u55356 \u57225 ');\
    \}\
    function abort()\{\
      const s=load();s.focus=null;save(s);\
      clearInterval(INTERVAL);\
      setRing(0);updateTimerText(DURATION);\
      $('#timerHint').textContent='Not started';\
      $('#abortBtn').classList.add('hidden');\
    \}\
\
    // Pool logic\
    function donate(id)\{\
      const s=load();\
      const t=s.tickets.find(x=>x.id===id);\
      if(!t||t.status!=='unused')return toast('Cannot donate this ticket',false);\
      s.pool.unshift(\{\
        id:t.id,producedBy:t.producedBy,producedAt:t.producedAt,expireAt:t.expireAt,\
        donatedAt:now(),status:'pool',claimedBy:null\
      \});\
      save(s);\
      render();\
      toast('Donated to pool');\
    \}\
    function claim(id)\{\
      const s=load();\
      const user=(s.user||'').trim();\
      if(!user)\{toast('Please save your name first',false);return;\}\
      const p=s.pool.find(x=>x.id===id);\
      if(!p||p.status!=='pool')return toast('Cannot claim',false);\
      if(p.producedBy===user)\{toast('You cannot claim your own ticket',false);return;\}\
      p.status='claimed';p.claimedBy=user;\
      if(!s.tickets.find(x=>x.id===p.id))\
        s.tickets.push(\{id:p.id,producedBy:p.producedBy,producedAt:p.producedAt,usedBy:null,usedAt:null,status:'unused',expireAt:p.expireAt\});\
      save(s);render();\
      toast('Claimed! Switch to Focus to use it');\
      $('#ticketInput').value=p.id;\
      switchTab('focus');\
    \}\
\
    // Render\
    function render()\{\
      const s=load();\
      cleanup(s);\
      save(s);\
      const user=s.user;\
      // produced\
      const produced=s.tickets.filter(t=>t.producedBy===user).sort((a,b)=>b.producedAt-a.producedAt);\
      $('#producedCount').textContent=produced.length;\
      $('#producedList').innerHTML=produced.map(t=>\{\
        const statusTag=t.status==='unused'?'<span class="badge">Unused</span>':t.status==='used'?'<span class="badge" style="background:#ecfdf5;border-color:#a7f3d0;color:#065f46">Used</span>':t.status==='expired'?'<span class="badge" style="background:#fef2f2;border-color:#fecaca;color:#991b1b">Expired</span>':t.status==='void'?'<span class="badge" style="background:#f1f5f9;border-color:#cbd5e1;color:#334155">Voided</span>':'';\
        const ttl=t.expireAt?Math.max(0,t.expireAt-now()):0;\
        const ttlTxt=t.status==='unused'?`<div class="text-[11px] text-slate-500">Time left: $\{Math.ceil(ttl/60000)\} min</div>`:'';\
        const actions=t.status==='unused'?`<div class="flex items-center gap-1 mt-1">\
          <button data-copy="$\{t.id\}" class="px-2 py-1.5 rounded-lg bg-white text-slate-700 text-xs border border-slate-300">Copy</button>\
          <button data-invite="$\{t.id\}" class="px-2 py-1.5 rounded-lg bg-white text-slate-700 text-xs border border-slate-300">Invite</button>\
          <button data-donate="$\{t.id\}" class="px-2 py-1.5 rounded-lg bg-white text-slate-700 text-xs border border-slate-300">Donate</button>\
          <button data-void="$\{t.id\}" class="px-2 py-1.5 rounded-lg bg-white text-slate-700 text-xs border border-slate-300">Invalidate</button>\
        </div>`:'';\
        return `<li class="p-3 rounded-xl border border-slate-200 bg-slate-50 flex flex-col gap-1">\
          <div class="flex items-center justify-between">\
            <div>\
              <div class="code font-semibold">$\{t.id\}</div>\
              <div class="text-[11px] text-slate-500">Created by $\{t.producedBy\}$\{t.usedAt?` \'b7 Used at $\{fmt(t.usedAt)\} by $\{t.usedBy\}`:''\}</div>\
            </div>\
            <div>$\{statusTag\}</div>\
          </div>\
          $\{ttlTxt\}\
          $\{actions\}\
        </li>`;\
        \}).join('')||'<li class="text-slate-500">No tickets yet</li>';\
\
      // used\
      const used=s.tickets.filter(t=>t.usedBy===user).sort((a,b)=>b.usedAt-a.usedAt);\
      $('#usedCount').textContent=used.length;\
      $('#usedList').innerHTML=used.map(t=>`<li class="p-3 rounded-xl border border-slate-200 bg-slate-50 flex items-center justify-between"><div><div class="code font-semibold">$\{t.id\}</div><div class="text-[11px] text-slate-500">Created by $\{t.producedBy\} \'b7 Used at $\{fmt(t.usedAt)\}</div></div><span class="badge" style="background:#ecfdf5;border-color:#a7f3d0;color:#065f46">Used</span></li>`).join('')||'<li class="text-slate-500">No used tickets</li>';\
\
      // pool\
      const pool=s.pool.filter(p=>p.status!=='expired').sort((a,b)=> (a.expireAt-b.expireAt) || (b.donatedAt-a.donatedAt));\
      $('#poolList').innerHTML=pool.map(p=>\{\
        const ttl=Math.max(0,p.expireAt-now()); const min=Math.ceil(ttl/60000);\
        const mine = (p.producedBy===user);\
        const btn = mine? `<button disabled class=\\"px-2 py-1.5 rounded-lg bg-slate-100 text-slate-400 text-xs border border-slate-200 cursor-not-allowed\\">Own ticket</button>` : (p.status==='pool'?`<button data-claim="$\{p.id\}" class="px-2 py-1.5 rounded-lg bg-white text-slate-700 text-xs border border-slate-300">Claim</button>`:'');\
        const statusTag = p.status==='claimed'?`<span class="badge" style="background:#eef2ff;border-color:#c7d2fe;color:#3730a3">Claimed by $\{p.claimedBy||''\}</span>`:'';\
        return `<li class="p-3 rounded-xl border border-slate-200 bg-slate-50 flex items-center justify-between"><div><div class="code font-semibold">$\{p.id\}</div><div class="text-[11px] text-slate-500">From $\{p.producedBy\} \'b7 Time left: $\{min\} min</div></div><div class="flex items-center gap-2">$\{statusTag\}$\{btn\}</div></li>`;\
        \}).join('')||'<li class="text-slate-500">No donated tickets</li>';\
\
      // bind actions\
      document.querySelectorAll('[data-copy]').forEach(b=> b.onclick=()=> \{navigator.clipboard.writeText(b.getAttribute('data-copy')); toast('Copied!');\});\
      document.querySelectorAll('[data-invite]').forEach(b=> b.onclick=()=> shareTicket(b.getAttribute('data-invite')) );\
      document.querySelectorAll('[data-donate]').forEach(b=> b.onclick=()=> donate(b.getAttribute('data-donate')) );\
      document.querySelectorAll('[data-void]').forEach(b=> b.onclick=()=> voidTicket(b.getAttribute('data-void')) );\
      document.querySelectorAll('[data-claim]').forEach(b=> b.onclick=()=> claim(b.getAttribute('data-claim')) );\
    \}\
\
    // verify & start\
    function verify()\{\
      const code=($('#ticketInput').value||'').trim().toUpperCase();\
      const s=load();\
      const user=(s.user||'').trim();\
      if(!user)\{toast('Please save your name first',false);return;\}\
      if(!code)\{toast('Enter a ticket code',false);return;\}\
      let t=s.tickets.find(x=>x.id.toUpperCase()===code);\
      if(!t)\{\
        const p=s.pool.find(x=>x.id.toUpperCase()===code);\
        if(p && p.status!=='expired')\{\
          t=\{id:p.id,producedBy:p.producedBy,producedAt:p.producedAt,usedBy:null,usedAt:null,status:'unused',expireAt:p.expireAt\};\
          s.tickets.push(t); save(s);\
        \}\
      \}\
      if(!t)\{toast('Ticket not found',false);return;\}\
      if(t.status!=='unused')\{toast('Ticket not usable',false);return;\}\
      if(t.expireAt && t.expireAt<=now())\{t.status='expired'; save(s); render(); toast('Ticket expired',false); return;\}\
      if(t.producedBy===user)\{toast('You cannot use your own ticket',false);return;\}\
      startFocus(t);\
      $('#ticketInput').value='';\
    \}\
\
    // extras\
    function voidTicket(id)\{\
      const s=load();\
      const t=s.tickets.find(x=>x.id===id);\
      if(!t||t.status!=='unused') return toast('Cannot invalidate this ticket',false);\
      t.status='void'; save(s); render(); toast('Invalidated');\
    \}\
    function shareTicket(id)\{\
      const text=`Focus Friend ticket: $\{id\}`;\
      if(navigator.share)\{navigator.share(\{text\}).catch(()=>\{\});\}\
      else \{navigator.clipboard.writeText(text); toast('Invite copied');\}\
    \}\
    function toast(msg, ok=true)\{\
      const el=document.createElement('div');\
      el.className=`fixed left-1/2 -translate-x-1/2 top-4 z-50 px-4 py-2 rounded-xl shadow-lg $\{ok?'bg-emerald-600':'bg-rose-600'\} text-white text-sm`;\
      el.textContent=msg;\
      document.body.appendChild(el);\
      setTimeout(()=>el.remove(),1500);\
    \}\
\
    function boot()\{\
      let s=load();\
      // \uc0\u27744 \u26368 \u22810 \u25554 \u28385 7\u24352 \u27979 \u31080 \u65288 \u24050 \u23384 \u22312 \u30340 \u19981 \u20877 \u25554 \u65292 Pool\u38543 \u21047 \u26032 \u34917 \u36275 7\u24352 \u65289 \
      const pool = s.pool || [];\
      const existIds = new Set(pool.map(p=>p.id));\
      while(pool.filter(p=>p.status=="pool"||p.status=="claimed").length<7)\{\
        // \uc0\u22810 \u29983 \u25104 \u20294 \u20445 \u35777 ID\u21807 \u19968 \
        makeDemoTickets(existIds).forEach(t=>\{pool.unshift(t);\});\
        // \uc0\u38450 \u27515 \u24490 \u29615 \u21482 \u21152 \u19968 \u27425 \u65288 makeDemoTickets\u40664 \u35748 7\u20010 \u65289 \
        break;\
      \}\
      s.pool = pool;\
      save(s);\
\
      $('#userName').value=s.user||'';\
      render();\
      if(s.focus?.endAt&&s.focus.endAt>now())\{\
        $('#timerHint').textContent='Counting down';\
        $('#abortBtn').classList.remove('hidden');\
        startTicker(s.focus.endAt,onEnd);\
      \}else\{\
        updateTimerText(DURATION); setRing(0);\
      \}\
      document.querySelectorAll('.tab-btn').forEach(b=>b.onclick=()=>switchTab(b.dataset.tab));\
      switchTab('focus');\
      $('#demoMode').onchange=e=>setDemoMode(e.target.checked);\
      $('#verifyBtn').onclick=verify;\
      $('#abortBtn').onclick=abort;\
      $('#saveUserBtn').onclick=()=>\{\
        const s=load();\
        s.user=$('#userName').value.trim(); save(s); toast('Saved'); render();\
      \};\
      $('#goPoolBtn').onclick=()=>switchTab('pool');\
      $('#refreshPoolBtn').onclick=()=>render();\
      setInterval(()=>\{\
        const s=load(); cleanup(s); save(s); render();\
      \}, 60000);\
      // \uc0\u22797 \u21046 \u26032 \u31080 \
      $('#copyNewTicket').onclick=()=>\{const t=$("#newTicketCode").textContent||""; if(t) \{navigator.clipboard.writeText(t);toast("Copied!");\}\};\
      $('#shareNewTicket').onclick=()=>\{const t=$("#newTicketCode").textContent||""; if(t)shareTicket(t);\};\
    \}\
    document.addEventListener('DOMContentLoaded', boot);\
  </script>\
</body>\
</html>}